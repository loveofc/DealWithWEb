서블릿은 주로 웹서버에서 동작하는 애플리케이션을 구현할 때 사용합니다.
서블릿을 사용하기 전에는 웹서버에서 외부 프로그램을 호출하고 수행 결과를 웹 브라우저로 전송하는
CGI라는 기술을 사용했습니다. 사용자가 많아지면서 대응하기 어려워져 나온 기술이 서블릿입니다.

1. 웹 애플리케이션 접근
서블릿은 웹서버에서 서비스되는 페이지입니다. 서블릿 실행 파일을 웹서버에 올려두어야 합니다. 
웹서버에서 서블릿의 위치는 어디며, 클라이언트는 어떻게 서블릿에 접근할까요? 클라이언트는 웹서버에
URL 정보로 서비스를 요청합니다. 

웹서버가 클라이언트에 서비스하는 단위는 웹 애플리케이션입니다.

URL 요청 활용법 예시 
http://      localhost   :     5555  /         webapp        /    index.jsp
(통신규약)  (컴퓨터위치)   (포트번호)  (웹 애플리키이션이름)   (최종파일이름)

웹서버마다 시작될 때 자동으로 애플리케이션으로 인식하여 서비스를 올려주는 디렉터리가 있습니다.
아파치 톰캣의 경우는 webapps 디렉터리에 애플리케이션들이 있습니다.
보통 하위 디텍터리 또는 디렉터리가 압축된 war파일은 하나의 애플리케이션으로 인식됩니다. WAS 종류에 따라
애플리케이션이 위치하는 디렉터리 이름이 다를 수 있습니다.

이클립스 workspace에 만든 웹 이름은 프로젝트 이름이고, 실제 애플리케이션의 루트 디렉토리는
src>main>webapp입니다. 이 디렉터리가 톰캣의 webapps의 하위 디렉터리에 해당합니다.

웹 애플리케이션은 하나의 디렉터리입니다. 이 디렉터리 안에 서비스하려는 문서들을 만들어 놓으면 웹에서 서비스되는 것입니다.
공통으로 가져야 하는 디렉터리와 파일이 있는데, 그것은 웹 애플리케이션 루트 디렉터리 바로 하위에 WEB-INF 디렉터리이며,
WEB-INF디렉터리에는 web.xml파일이 있어야 합니다. 그리고 클래스 파일이 있다면 WEB-INF하단이 lib폴더안에 .class파일을
넣어둬야 합니다. 그래야만 WAS를 구성하는 애플리케이션 서버들이 자동으로 인식할 수 있기 때문입니다. web.xml파일과 클래스파일을
제외한 다른 파일들은 웹 애플리케이션 루트 디렉터리 하위의 어느 곳에 있어도 상관없습니다.